{"version":3,"sources":["components/Home/index.js","components/actions/index.js","components/Quiz/topRow.js","components/Quiz/progress.js","components/Quiz/question.js","components/Quiz/statistics.js","components/Quiz/index.js","components/App.js","components/reducers/counter.js","components/reducers/answers.js","components/reducers/start.js","components/reducers/currentQuestion.js","components/reducers/intervalId.js","components/reducers/index.js","index.js"],"names":["Home","dispatch","useDispatch","className","onClick","type","payload","Row","setSubmitted","counter","useSelector","state","intervalId","min","Math","floor","sec","clearInterval","alert","window","confirm","Progress","total","current","currentQuestion","style","disabled","opacity","last","Question","props","question","options","answers","id","selected","map","i","answer","submitAnswer","cancelAnswer","Stats","data","correct","incorrect","unattempt","length","correctDeg","incorrectDeg","background","Quiz","useState","submitted","useEffect","initCounter","setInterval","setIntervalId","App","started","start","counterReducer","action","init","reset","elapse","sessionStorage","getItem","parseInt","time","setItem","toString","removeItem","answerReducer","submit","cancel","JSON","parse","Array","fill","stringify","startReducer","stop","saved","currentQuestionReducer","next","prev","resetCurrent","update","intervalIdReducer","combineReducers","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6256206.chunk.js","sourcesContent":["import './home.css';\r\n\r\nimport {useDispatch} from 'react-redux';\r\nimport {start} from '../actions';\r\n\r\nexport default function Home() {\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n    <div className=\"home\">\r\n      <h3>Welcome to</h3>\r\n      <h1>Quiz App</h1>\r\n      <hr />\r\n      <h3>Some important instructions</h3>\r\n      <ol className=\"list\">\r\n        <li>Quiz will be consist of 10 questions</li>\r\n        <li>You will have 5 minutes to submit answers. (30 seconds per question)</li>\r\n        <li>4 marks will be awarded for each correct answer.</li>\r\n        <li>1 mark will be deducted for each incorrect answer.</li>\r\n        <li>No marks will be deducted for unattempted answers.</li>\r\n        <li>You must score atleast 12 marks (30%) to pass the quiz.</li>\r\n        <li>Your Progress will be saved until you stop the quiz by your own or submit the quiz or close the current browser window.</li>\r\n      </ol>\r\n      <hr />\r\n      <button className=\"button\" onClick={()=>dispatch(start())}>\r\n        Start Now\r\n      </button>\r\n    </div>\r\n  );\r\n}","export function initCounter(length) {\r\n  return {\r\n    type: 'INITCOUNTER',\r\n    payload: {\r\n      length\r\n    }\r\n  };\r\n}\r\n\r\nexport function resetCounter() {\r\n  return {\r\n    type: 'RESETCOUNTER',\r\n    payload: {}\r\n  };\r\n}\r\n\r\nexport function elapse() {\r\n  return {\r\n    type: 'ELAPSE',\r\n    payload: {}\r\n  };\r\n}\r\n\r\nexport function initAnswers(length) {\r\n  return {\r\n    type: 'INITANSWERS',\r\n    payload: {\r\n      length\r\n    }\r\n  };\r\n}\r\n\r\nexport function resetAnswers() {\r\n  return {\r\n    type: 'RESETANSWERS',\r\n    payload: {}\r\n  };\r\n}\r\n\r\nexport function submitAnswer(id,answer) {\r\n  return {\r\n    type: 'SUBMITANSWER',\r\n    payload: {\r\n      id,\r\n      answer\r\n    }\r\n  };\r\n}\r\n\r\nexport function cancelAnswer(id) {\r\n  return {\r\n    type: 'CANCELANSWER',\r\n    payload: {\r\n      id\r\n    }\r\n  };\r\n}\r\n\r\nexport function initIsStarted() {\r\n  return {\r\n    type: 'INITISSTART',\r\n    payload: {}\r\n  };\r\n}\r\n\r\nexport function start() {\r\n  return {\r\n    type: 'START',\r\n    payload: {}\r\n  };\r\n}\r\n\r\nexport function stop() {\r\n  return {\r\n    type: 'STOP',\r\n    payload: {}\r\n  };\r\n}\r\n\r\nexport function next(last) {\r\n  return {\r\n    type: 'NEXT',\r\n    payload: {\r\n      last\r\n    }\r\n  };\r\n}\r\n\r\nexport function prev() {\r\n  return {\r\n    type: 'PREV',\r\n    payload: {}\r\n  };\r\n}\r\n\r\nexport function initCurrentQuestion() {\r\n  return {\r\n    type: 'INITCURRENT',\r\n    payload: {}\r\n  };\r\n}\r\n\r\nexport function resetCurrent() {\r\n  return {\r\n    type: 'RESETCURRENT',\r\n    payload: {}\r\n  };\r\n}\r\n\r\nexport function setIntervalId(id) {\r\n  return {\r\n    type: 'SETID',\r\n    payload: {\r\n      id\r\n    }\r\n  };\r\n}","import './topRow.css';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {resetCounter,resetAnswers,stop,resetCurrent} from '../actions';\r\n\r\nexport default function Row({setSubmitted}) {\r\n  const counter = useSelector(state=>state.counter);\r\n  const intervalId = useSelector(state=>state.intervalId);\r\n  const dispatch = useDispatch();\r\n\r\n  let min = Math.floor(counter/60);\r\n  let sec = counter%60;\r\n\r\n  function stopAll() {\r\n    let ch = window.confirm(\"Do you really want to stop the current quiz?\");\r\n    if (!ch) return;\r\n    dispatch(resetCounter());\r\n    dispatch(resetAnswers());\r\n    dispatch(resetCurrent());\r\n    dispatch(stop());\r\n    clearInterval(intervalId);\r\n  }\r\n\r\n  if(counter<0) {\r\n    clearInterval(intervalId);\r\n    alert(\"Time Over! Quiz will be submitted automatically.\");\r\n    setSubmitted(true);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"top-row\">\r\n      <p>Brand</p>\r\n      <p>Quiz App</p>\r\n      <button onClick={stopAll}>Stop the Quiz</button>\r\n      <div className=\"timer\">\r\n        <p>{min}:{sec<10?'0':''}{sec}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import './progress.css';\r\nimport {FaLongArrowAltLeft,FaLongArrowAltRight} from 'react-icons/fa';\r\nimport {AiOutlineUpload} from 'react-icons/ai';\r\n\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {next,prev} from '../actions';\r\n\r\nexport default function Progress({total,setSubmitted}) {\r\n  const current = useSelector(state=>state.currentQuestion);\r\n  const intervalId = useSelector(state=>state.intervalId);\r\n  const dispatch = useDispatch();\r\n  \r\n  const style = {\r\n    \"--progress\": `${(current+1)/total*100}%`\r\n  };\r\n  \r\n  const disabled = {\r\n    opacity: current===0?'.5':'1'\r\n  };\r\n  \r\n  function previous() {\r\n    dispatch(prev());\r\n  }\r\n  function nextQuestion() {\r\n    dispatch(next(total-1));\r\n  }\r\n\r\n  function submit() {\r\n    clearInterval(intervalId);\r\n    setSubmitted(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"progress\" style={style}>\r\n      <div className=\"buttons\" style={disabled}>\r\n        <FaLongArrowAltLeft className=\"icon\" onClick={previous}/>\r\n        &nbsp;&nbsp;<p>Previous</p>\r\n      </div>\r\n      <div className=\"bar-wrapper\">\r\n        <div className=\"bar\">\r\n          <div className=\"strip\">\r\n          </div>\r\n          <div className=\"ball\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        current===(total-1)?\r\n        <div className=\"buttons\">\r\n          <p>Submit</p>&nbsp;&nbsp;\r\n          <AiOutlineUpload className=\"icon\" onClick={submit}/>\r\n        </div>:\r\n        <div className=\"buttons\">\r\n          <p>Next</p>&nbsp;&nbsp;\r\n          <FaLongArrowAltRight className=\"icon\" onClick={nextQuestion}/>\r\n        </div>\r\n      }\r\n      \r\n    </div>\r\n  );\r\n}","import './question.css';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {submitAnswer,cancelAnswer} from '../actions';\r\n\r\nexport default function Question(props) {\r\n  const {question,options} = props;\r\n  const dispatch = useDispatch();\r\n  const {answers,currentQuestion:id} = useSelector(state=>state);\r\n  \r\n  const selected = answers[id];\r\n\r\n  function submit(ans) {\r\n    dispatch(submitAnswer(id,ans));\r\n  }\r\n  \r\n  return (\r\n    <div className=\"question-box\">\r\n      <div className=\"question\">\r\n        {question}\r\n      </div>\r\n      <div className=\"options\">\r\n      {options.map(i=>{\r\n        return (\r\n          <p key={i} \r\n            onClick={()=>submit(i)}\r\n            className={selected===i?'selected':''}>\r\n            {i}\r\n          </p>\r\n        );\r\n      })}\r\n      </div>\r\n      {selected?\r\n        <button onClick={()=>dispatch(cancelAnswer(id))}>Clear</button>\r\n        :<></>\r\n      }\r\n    </div>\r\n  )\r\n}","import './statistics.css';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {resetCounter,resetAnswers,stop,resetCurrent} from '../actions';\r\n\r\nexport default function Stats({data}) {\r\n  const {answers} = useSelector(state=>state);\r\n  let correct=0, incorrect=0, unattempt=0,total=data.length;\r\n  const dispatch = useDispatch();\r\n\r\n  for(let i=0; i<data.length; i++) {\r\n    if (answers[i]===null) unattempt++;\r\n    else if (answers[i]===data[i].answer) correct++;\r\n    else incorrect++;\r\n  }\r\n  \r\n  let correctDeg = correct/total*360;\r\n  let incorrectDeg = incorrect/total*360 + correctDeg;\r\n  \r\n  const style = {\r\n    background: `\r\n      conic-gradient(\r\n        var(--success) 0deg,\r\n        var(--success) ${correctDeg}deg,\r\n        var(--danger) ${correctDeg}deg,\r\n        var(--danger) ${incorrectDeg}deg,\r\n        var(--warn) ${incorrectDeg}deg,\r\n        var(--warn) 360deg\r\n      )\r\n    `\r\n  }\r\n  \r\n  function resetAll() {\r\n    dispatch(resetCounter());\r\n    dispatch(resetAnswers());\r\n    dispatch(resetCurrent());\r\n    dispatch(stop());\r\n  }\r\n  \r\n  return (\r\n    <div className=\"statistics\">\r\n      <h1>Statistics</h1>\r\n      <div className=\"summary\">\r\n        <p className=\"success\"><strong>Correct: {correct}</strong></p>\r\n        <p className=\"danger\"><strong>Incorrect: {incorrect}</strong></p>\r\n        <p className=\"warn\"><strong>Unattempted: {unattempt}</strong></p>\r\n      </div>\r\n      <div className=\"pie-wrapper\">\r\n        <div className=\"pie\" style={style}></div>\r\n      </div>\r\n\r\n      <button onClick={resetAll}>Close</button>\r\n    </div>\r\n  );\r\n}","import './quiz.css';\r\nimport data from '../data.json';\r\nimport TopRow from './topRow';\r\nimport Progress from './progress';\r\nimport Question from './question';\r\nimport Statistics from './statistics';\r\n\r\nimport {useEffect,useState} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {initAnswers,initCounter,elapse,initCurrentQuestion,setIntervalId} from '../actions';\r\n\r\nexport default function Quiz() {\r\n  const {answers,currentQuestion} = useSelector(state=>state);\r\n  const dispatch = useDispatch();\r\n  \r\n  const [submitted,setSubmitted] = useState(false);\r\n  \r\n  useEffect(()=>{\r\n    dispatch(initAnswers(data.length));\r\n    dispatch(initCounter(data.length));\r\n    dispatch(initCurrentQuestion());\r\n    let id = setInterval(()=>dispatch(elapse()),1000);\r\n    dispatch(setIntervalId(id));\r\n    return ()=>{\r\n      clearInterval(id);\r\n    }\r\n    // eslint-disable-next-line\r\n  },[]);\r\n  \r\n  return (\r\n    <div className=\"quiz\">\r\n      {\r\n        submitted?\r\n        <Statistics data={data}/>:\r\n        <>\r\n        <TopRow setSubmitted={setSubmitted} />\r\n        <Question {...data[currentQuestion]} selected={answers[currentQuestion]} id={currentQuestion}/>\r\n        <Progress total={data.length} setSubmitted={setSubmitted}/>\r\n        </>\r\n      }\r\n    </div>\r\n  );\r\n}","import './App.css';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {useEffect} from 'react';\r\nimport {initIsStarted} from './actions';\r\n\r\nimport Home from './Home';\r\nimport Quiz from './Quiz';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const started = useSelector(state=>state.start);\r\n  \r\n  useEffect(()=>{\r\n    dispatch(initIsStarted());\r\n    // eslint-disable-next-line\r\n  },[]);\r\n  \r\n  return started?<Quiz />:<Home />;\r\n}\r\n\r\nexport default App;","export default counterReducer;\r\n\r\nfunction counterReducer(state = 0, action) {\r\n  switch (action.type) {\r\n    case 'INITCOUNTER':\r\n      return init(action.payload.length);\r\n      \r\n    case 'RESETCOUNTER':\r\n      return reset();\r\n      \r\n    case 'ELAPSE':\r\n      return elapse(state);\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction init(length) {\r\n  let counter = sessionStorage.getItem('counter');\r\n  if (counter) {\r\n    return parseInt(counter);\r\n  }\r\n  else {\r\n    let time = length*30;\r\n    sessionStorage.setItem('counter',time.toString());\r\n    return time;\r\n  }\r\n}\r\n\r\nfunction reset() {\r\n  sessionStorage.removeItem('counter');\r\n  return 0;\r\n}\r\n\r\nfunction elapse(state) {\r\n  sessionStorage.setItem('counter',(state-1).toString());\r\n  return state-1;\r\n}","export default answerReducer;\r\n\r\nfunction answerReducer(state = [], action) {\r\n  \r\n  switch (action.type) {\r\n    case 'INITANSWERS':\r\n      return init(action.payload.length);\r\n      \r\n    case 'RESETANSWERS':\r\n      return reset();\r\n      \r\n    case 'SUBMITANSWER':\r\n      return submit(action.payload.id,action.payload.answer,state);\r\n      \r\n    case 'CANCELANSWER':\r\n      return cancel(action.payload.id,state);\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction init(length) {\r\n  let answers = sessionStorage.getItem('answers');\r\n  if (answers) {\r\n    return JSON.parse(answers);\r\n  }\r\n  else {\r\n    answers = new Array(length).fill(null);\r\n    sessionStorage.setItem('answers',JSON.stringify(answers));\r\n    return answers;\r\n  }\r\n}\r\n\r\nfunction reset() {\r\n  sessionStorage.removeItem('answers');\r\n  return [];\r\n}\r\n\r\nfunction submit(id,answer,state) {\r\n  state[id] = answer;\r\n  sessionStorage.setItem('answers',JSON.stringify(state));\r\n  return [...state];\r\n}\r\n\r\nfunction cancel(id,state) {\r\n  state[id] = null;\r\n  sessionStorage.setItem('answers',JSON.stringify(state));\r\n  return [...state];\r\n}","export default startReducer;\r\n\r\nfunction startReducer(state = false, action) {\r\n  switch (action.type) {\r\n    case 'INITISSTART':\r\n      return init()\r\n    \r\n    case 'START':\r\n      return start();\r\n    \r\n    case 'STOP':\r\n      return stop();\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction init() {\r\n  let saved = sessionStorage.getItem('quiz started');\r\n  if(saved) {\r\n    return saved==='true'?true:false;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction start() {\r\n  sessionStorage.setItem('quiz started','true');\r\n  return true;\r\n}\r\n\r\nfunction stop() {\r\n  sessionStorage.setItem('quiz started','false');\r\n  return false;\r\n}","export default currentQuestionReducer;\r\n\r\nfunction currentQuestionReducer(state = 0, action) {\r\n  switch (action.type) {\r\n    case 'INITCURRENT':\r\n      return init();\r\n      \r\n    case 'NEXT':\r\n      return next(action.type.last,state);\r\n      \r\n    case 'PREV':\r\n      return prev(state);\r\n\r\n    case 'RESETCURRENT':\r\n      return resetCurrent();\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction next(last,state) {\r\n  let update = state===last?state:state+1;\r\n  sessionStorage.setItem('currentQuestion',update.toString());\r\n  return update;\r\n}\r\n\r\nfunction prev(state) {\r\n  let update = state===0?state:state-1;\r\n  sessionStorage.setItem('currentQuestion',update.toString());\r\n  return update;\r\n}\r\n\r\nfunction init() {\r\n  let current = sessionStorage.getItem('currentQuestion');\r\n  if (current) {\r\n    return parseInt(current);\r\n  } else {\r\n    sessionStorage.setItem('currentQuestion','0');\r\n    return 0;\r\n  }\r\n}\r\n\r\nfunction resetCurrent() {\r\n  sessionStorage.setItem('currentQuestion','0');\r\n  return 0;\r\n}","export default intervalIdReducer;\r\n\r\nfunction intervalIdReducer(state = 0, action) {\r\n  switch (action.type) {\r\n    case 'SETID':\r\n      return action.payload.id;\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","import counter from './counter';\r\nimport answers from './answers';\r\nimport start from './start';\r\nimport currentQuestion from './currentQuestion';\r\nimport intervalId from './intervalId';\r\n\r\nimport { combineReducers } from 'redux'\r\n\r\nexport default combineReducers({\r\n  counter,\r\n  answers,\r\n  start,\r\n  currentQuestion,\r\n  intervalId\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer from './components/reducers';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}